// This is your Prisma schema file for local development,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User model for authentication and identification
model User {
  id        String   @id @default(uuid())
  rollNumber String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  groupAdmin    Group?         @relation("GroupAdmin")
  memberOf      Group?         @relation("GroupMembers", fields: [groupId], references: [id])
  groupId       String?
  applications  GroupApplication[]

  @@index([groupId])
}

// Group model for team formation
model Group {
  id        String   @id @default(uuid())
  name      String
  adminId   String   @unique
  admin     User     @relation("GroupAdmin", fields: [adminId], references: [id], onDelete: Cascade)
  members   User[]   @relation("GroupMembers")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Applications to join this group
  applications GroupApplication[]
}

// Application to join a group
model GroupApplication {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  groupId     String
  group       Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  status      ApplicationStatus @default(PENDING)
  notes       String?  // Optional notes from the applicant
  responseNote String? // Optional response note from admin
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([userId, groupId])
  @@index([groupId])
  @@index([userId])
}

enum ApplicationStatus {
  PENDING
  APPROVED
  REJECTED
}

// Class roll number ranges for validation
model ClassRollRange {
  className String @id
  minRoll   Int
  maxRoll   Int
}
